import styles from './SetUserForm.module.css';import {useState, useEffect, useRef} from "react";import Wrapper from "../UI/Wrapper";import Popup from "../UI/Popup";export default function SetUserForm(props) {	const {setNewUser} = props	const [userName, setUserName] = useState('');	const [userAge, setUserAge] = useState('');	const [inputIsEmpty, setInputIsEmpty] = useState(true);	const [validAge, setValidAge] = useState(false);	const [openPopup, setOpenPopup] = useState(false);	const useRef__inputName = useRef(null)	const useRef__inputAge = useRef(null)	function validateForm() {		if (userName.trim().length === 0 || userAge.trim().length === 0) {			setInputIsEmpty(true)		} else {			setInputIsEmpty(false)		}		setValidAge(userAge > 0)	}	useEffect(() => {		validateForm();	}, [userName, userAge]);	const sendNewUser = (e) => {		e.preventDefault();		if (!inputIsEmpty && validAge) {			//if form is Valid			setNewUser(				{					id: String(Date.now()),					name: userName,					age: userAge,				}			);			setUserName('')			setUserAge('')		} else {			// Not Valid			//1.open Popup			setOpenPopup(true)			//2.set class  ('invalid')			if (userName.trim().length === 0) {				useRef__inputName.current.classList.add(`${styles.invalid}`);			}			//3.set class  ('invalid')			if (userAge.trim().length === 0) {				useRef__inputAge.current.classList.add(`${styles.invalid}`);			}		}	}	function displayPopup() {		const popupContent = () => {			if (inputIsEmpty) {				return (					<>						<h2 className='popup_headline popup__content_element'>Incorrect Input</h2>						<p className='popup__content_element'>Some input is Empty</p>					</>				)			}			if (!validAge) {				return (					<>						<h2 className='popup_headline popup__content_element'>Incorrect Age</h2>						<p className='popup__content_element'>Age should be more than 0</p>					</>				)			}		}		return (			<Popup popupState={openPopup} setPopupState={setOpenPopup}>				{popupContent()}			</Popup>		)	}	const inputChangeHandler = (e, inputState, inputRef) => {		//Set Input value		inputState(e.target.value)		//Remove class ('invalid')... if current input has class ('invalid') and value is not empty		if (inputRef.current.classList.contains(`${styles.invalid}`) && inputRef.current.value.trim().length > 0) {			inputRef.current.classList.remove(`${styles.invalid}`)		}	}	return (		<>			<Wrapper				type='gray'				className={styles.form_wrapper}			>				<form					className={styles.form}					onSubmit={sendNewUser}				>					<div className={styles.form_row}>						<label htmlFor="f_name">Name:</label>						<input							ref={useRef__inputName}							type="text"							id='f_name'							value={userName}							onChange={(e) => inputChangeHandler(e, setUserName, useRef__inputName)}						/>					</div>					<div className={styles.form_row}>						<label htmlFor="f_age">Age:</label>						<input							ref={useRef__inputAge}							type="number"							id='f_age'							value={userAge}							onChange={(e) => inputChangeHandler(e, setUserAge, useRef__inputAge)}						/>					</div>					<button type="submit">Create User</button>				</form>			</Wrapper>			{displayPopup()}		</>	)}